{"version":3,"sources":["Ultils/axios.js","Redux/Reducer/loginReducer.js","Layout/Login.js","Layout/Dashboard.js","Layout/ProtectRoute.js","App.js","serviceWorker.js","Redux/Reducer/index.js","Redux/store.js","index.js"],"names":["axiosInstance","axios","create","baseURL","withCredentials","fetchLoginUser","createAsyncThunk","token","thunkAPI","a","post","then","res","data","response","fetchProfileUser","apitoken","user","get","headers","Authorization","AuthReducer","createSlice","name","initialState","loading","id","auth","loadingProfile","reducers","authlogin","state","action","extraReducers","pending","payload","fulfilled","status","localStorage","setItem","removeItem","rejected","username","actions","TabPane","Tabs","Option","Select","Login","props","responseFacebook","setState","activekey","responseFacebook1","console","log","donvi","onLogin","values","history","push","onRegister","id_donvi","this","style","paddingTop","offset","defaultActiveKey","centered","activeKey","tab","FacebookOutlined","key","direction","appId","autoLoad","fields","callback","render","renderProps","type","onClick","block","SyncOutlined","span","className","initialValues","accessToken","email","remember","onFinish","Item","size","src","picture","url","rules","required","message","prefix","IdcardOutlined","placeholder","UserOutlined","MailOutlined","LockOutlined","htmlType","label","onChange","onGenderChange","allowClear","map","element","i","value","React","Component","mapDispatch","connect","loginReducer","Title","Typography","validateMessages","Dashboard","Form","useForm","form","useState","setData","setLoading","reload","setReload","hidden","setHidden","useEffect","getItem","error","strong","Link","success","width","LinkOutlined","display","flexDirection","justifyContent","padding","resetFields","level","gutter","index","title","providerName","bordered","content","placement","href","target","PrivateRoute","component","rest","to","pathname","App","useSelector","dispatch","useDispatch","ProtectRoute","path","exact","Boolean","window","location","hostname","match","combineReducers","store","configureStore","reducer","rootReducer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a5151dae.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL:'https://eurowindows.educationhost.cloud/api',\r\n    withCredentials:true,\r\n\r\n});\r\nexport default axiosInstance;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../Ultils/axios\";\r\nexport const fetchLoginUser = createAsyncThunk(\r\n  \"fetchLogin\",\r\n  async (token, thunkAPI) => {\r\n    const response = await axiosInstance\r\n      .post(\"/login\", token)\r\n      .then((res) => res.data);\r\n    return response;\r\n  }\r\n);\r\nexport const fetchProfileUser = createAsyncThunk(\r\n  \"fetchProfile\",\r\n  async (apitoken, thunkAPI) => {\r\n    const user = axiosInstance\r\n      .get(\"/profile\", { headers: { Authorization: `Bearer ${apitoken}` } })\r\n      .then((response) => response.data);\r\n    return user;\r\n  }\r\n);\r\nconst AuthReducer = createSlice({\r\n  name: \"Auth\",\r\n  initialState: {\r\n    loading: false,\r\n    user: { name: \"\", token: \"\", id: \"\" },\r\n    apitoken: \"\",\r\n    auth: false,\r\n    loadingProfile: true,\r\n  },\r\n  reducers: {\r\n    authlogin(state, action) {\r\n      state.auth=true;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    /**\r\n     * kiem tra login\r\n     */\r\n    [fetchLoginUser.pending]: (state, payload) => {\r\n      state.loading = true;\r\n    },\r\n    [fetchLoginUser.fulfilled]: (state, payload) => {\r\n      if (payload.payload.status === true) {\r\n        state.apitoken = payload.payload.data;\r\n        state.auth = true;\r\n        localStorage.setItem(\"token\", payload.payload.data);\r\n      } else {\r\n        localStorage.removeItem(\"token\");\r\n      }\r\n    },\r\n    [fetchLoginUser.rejected]: (state, payload) => {\r\n      state.loading = false;\r\n    },\r\n    /**\r\n     * kiem tra profile\r\n     */\r\n    [fetchProfileUser.pending]: (state, payload) => {},\r\n    [fetchProfileUser.fulfilled]: (state, payload) => {\r\n      if (payload.payload.status === true) {\r\n        state.auth = true;\r\n        state.user = {\r\n          name: payload.payload.data.username,\r\n          token: \"\",\r\n          id: payload.payload.data.id,\r\n        };\r\n        state.loadingProfile=false;\r\n      } else {\r\n        \r\n        state.auth=false\r\n      }\r\n    },\r\n    [fetchProfileUser.rejected]: (state, payload) => {\r\n      state.loadingProfile=false;\r\n    },\r\n  },\r\n});\r\nexport default AuthReducer.reducer;\r\nexport const { authlogin } = AuthReducer.actions;\r\n","import React from \"react\";\r\nimport { Tabs, Row, Col, Button, Form, Input, Avatar, Space, Select } from \"antd\";\r\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\nimport { connect } from \"react-redux\";\r\nimport { authlogin } from \"../Redux/Reducer/loginReducer\";\r\nimport axiosInstance from \"../Ultils/axios\";\r\nimport {\r\n  FacebookOutlined,\r\n  SyncOutlined,\r\n  LockOutlined,\r\n  UserOutlined,\r\n  MailOutlined,\r\n  IdcardOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Option } = Select;\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activekey: \"1\",\r\n      data: {},\r\n      loading: true,\r\n      donvi: {},\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    if (this.props.auth === true) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    axiosInstance.get(\"/donvi-list\").then((res) => {\r\n      if (res.data.status === true) {\r\n        this.setState({ donvi: res.data.data });\r\n      }\r\n    });\r\n  }\r\n  responseFacebook = (response) => {\r\n    if (response.status !== \"unknown\") {\r\n      this.setState({ data: response });\r\n      this.setState({ loading: false });\r\n      this.setState({ activekey: \"2\" });\r\n    }\r\n  };\r\n  responseFacebook1= (response)=>{\r\n    if (response.status !== \"unknown\") {\r\n      this.setState({ data: response });\r\n      this.setState({ loading: false });\r\n      this.setState({ activekey: \"3\" });\r\n      console.log(this.state.donvi);\r\n    }\r\n  }\r\n  /**\r\n   * Hàm login đăng nhập hệ thống\r\n   * @param {giá trị của form} values \r\n   */\r\n  onLogin = (values) => {\r\n    axiosInstance.post(\"/login\", { token: values.token }).then((res) => {\r\n      if (res.data.status === true) {\r\n        this.props.authlogin();\r\n        localStorage.setItem(\"token\", res.data.data);\r\n        this.props.history.push(\"/\");\r\n      } else {\r\n      }\r\n    });\r\n   \r\n    \r\n  };\r\n  /**\r\n   * Hàm đăng kí hệ thống\r\n   * @param {giá trị form} values \r\n   */\r\n  onRegister = (values) => {\r\n    axiosInstance.post(\"/register\", { token: values.token, id_donvi:values.id_donvi }).then((res) => {\r\n      if (res.data.status === true) {\r\n        this.props.authlogin();\r\n        localStorage.setItem(\"token\",res.data.data);\r\n        this.props.history.push(\"/\");\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Row style={{ paddingTop: \"10%\" }}>\r\n        <Col offset={8}>\r\n          <Tabs defaultActiveKey=\"1\" centered activeKey={this.state.activekey}>\r\n            <TabPane\r\n              tab={\r\n                <span>\r\n                  <FacebookOutlined />\r\n                  ĐĂNG NHẬP BẰNG FACEBOOK\r\n                </span>\r\n              }\r\n              key=\"1\"\r\n            >\r\n              <Space direction=\"vertical\">\r\n                <FacebookLogin\r\n                  appId=\"564205580431684\"\r\n                  autoLoad={false}\r\n                  fields=\"name,email,picture\"\r\n                  callback={this.responseFacebook}\r\n                  render={(renderProps) => (\r\n                    <Button type=\"primary\" onClick={renderProps.onClick} block>\r\n                      ĐĂNG NHẬP BẰNG TÀI KHOẢN FACEBOOK\r\n                    </Button>\r\n                  )}\r\n                />\r\n\r\n                <FacebookLogin\r\n                  appId=\"564205580431684\"\r\n                  autoLoad={false}\r\n                  fields=\"name,email,picture\"\r\n                  callback={this.responseFacebook1}\r\n                  render={(renderProps) => (\r\n                    <Button type=\"primary\" onClick={renderProps.onClick} block>\r\n                      ĐĂNG KÍ TÀI KHOẢN FACEBOOK\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Space>\r\n            </TabPane>\r\n            <TabPane\r\n              tab={\r\n                <span>\r\n                  <SyncOutlined />\r\n                  ĐĂNG NHẬP HỆ THỐNG\r\n                </span>\r\n              }\r\n              key=\"2\"\r\n            >\r\n              {this.state.loading ? (\r\n                <h1>Loading....</h1>\r\n              ) : (\r\n                <Row>\r\n                  <Col span=\"20\" offset=\"2\">\r\n                    <Form\r\n                      name=\"normal_login\"\r\n                      className=\"login-form\"\r\n                      initialValues={{\r\n                        username: this.state.data.name,\r\n                        token: this.state.data.accessToken,\r\n                        id: this.state.data.id,\r\n                        email: this.state.data.email,\r\n                        remember: true,\r\n                      }}\r\n                      onFinish={this.onLogin}\r\n                    >\r\n                      <Form.Item>\r\n                        <Avatar\r\n                          size=\"large\"\r\n                          src={this.state.data.picture.data.url}\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        name=\"id\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please input your Username!\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input\r\n                          prefix={\r\n                            <IdcardOutlined className=\"site-form-item-icon\" />\r\n                          }\r\n                          placeholder=\"ID\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        name=\"username\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please input your Username!\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input\r\n                          prefix={\r\n                            <UserOutlined className=\"site-form-item-icon\" />\r\n                          }\r\n                          placeholder=\"Username\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        name=\"email\"\r\n                        rules={[\r\n                          {\r\n                            required: false,\r\n                            message: \"Please input your Username!\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input\r\n                          prefix={\r\n                            <MailOutlined className=\"site-form-item-icon\" />\r\n                          }\r\n                          placeholder=\"email\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        name=\"token\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please input your Password!\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input\r\n                          prefix={\r\n                            <LockOutlined className=\"site-form-item-icon\" />\r\n                          }\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          htmlType=\"submit\"\r\n                          className=\"login-form-button\"\r\n                          loading={this.state.loading}\r\n                        >\r\n                          ĐĂNG NHẬP\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              )}\r\n            </TabPane>\r\n            <TabPane\r\n              tab={\r\n                <span>\r\n                  <SyncOutlined />\r\n                  ĐĂNG KÝ HỆ THỐNG\r\n                </span>\r\n              }\r\n              key=\"3\"\r\n            >\r\n              {this.state.loading ? (\r\n                <h1>Loading....</h1>\r\n              ) : (\r\n                <Row>\r\n                  <Col span=\"20\" offset=\"2\">\r\n                    <Form\r\n                      name=\"normal_login\"\r\n                      className=\"login-form\"\r\n                      initialValues={{\r\n                        username: this.state.data.name,\r\n                        token: this.state.data.accessToken,\r\n                        id: this.state.data.id,\r\n                        email: this.state.data.email,\r\n                        remember: true,\r\n                      }}\r\n                      onFinish={this.onRegister}\r\n                    >\r\n                      <Form.Item>\r\n                        <Avatar\r\n                          size=\"large\"\r\n                          src={this.state.data.picture.data.url}\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        name=\"id\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please input your Username!\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input\r\n                          prefix={\r\n                            <IdcardOutlined className=\"site-form-item-icon\" />\r\n                          }\r\n                          placeholder=\"ID\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        name=\"username\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please input your Username!\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input\r\n                          prefix={\r\n                            <UserOutlined className=\"site-form-item-icon\" />\r\n                          }\r\n                          placeholder=\"Username\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        name=\"email\"\r\n                        rules={[\r\n                          {\r\n                            required: false,\r\n                            message: \"Please input your Username!\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input\r\n                          prefix={\r\n                            <MailOutlined className=\"site-form-item-icon\" />\r\n                          }\r\n                          placeholder=\"email\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        name=\"token\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please input your Password!\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input\r\n                          prefix={\r\n                            <LockOutlined className=\"site-form-item-icon\" />\r\n                          }\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        name=\"id_donvi\"\r\n                        label=\"Đơn vị\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Select\r\n                          placeholder=\"Lựa chọn đơn vị\"\r\n                          onChange={this.onGenderChange}\r\n                          allowClear\r\n                        >\r\n                          {this.state.donvi.map((element,i )=> {\r\n                             return (<Option value={element.id} key={element.id}>{element.name}</Option>);\r\n                          })\r\n                          }\r\n                        </Select>\r\n                      </Form.Item>\r\n                      <Form.Item>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          htmlType=\"submit\"\r\n                          className=\"login-form-button\"\r\n                          loading={this.state.loading}\r\n                        >\r\n                          ĐĂNG KÝ\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              )}\r\n            </TabPane>\r\n          </Tabs>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const { loginReducer } = state;\r\n  return loginReducer;\r\n}\r\nconst mapDispatch = { authlogin }\r\nexport default connect(mapStateToProps, mapDispatch)(Login);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { LinkOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Space,\r\n  Typography,\r\n  message,\r\n  Card,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport \"./dashboard.css\";\r\nimport axiosInstance from \"../Ultils/axios\";\r\nimport \"./dashboard.css\";\r\nconst { Title } = Typography;\r\nconst validateMessages = {\r\n  required: \"Link không được đê trống\",\r\n};\r\nfunction Dashboard(props) {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [reload, setReload]= useState(false);\r\n  const [hidden, setHidden] = useState(true);\r\n  const onFinish = (values) => {\r\n    setLoading(true);\r\n    axiosInstance\r\n      .post(\r\n        \"/facebook-post\",\r\n        { url: values.Link },\r\n        {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.data.status == true) {\r\n          message.success(\"Upload thành công\");\r\n          setReload(!reload);\r\n        } else {\r\n          message.error(\"Upload không thành công\");\r\n        }\r\n      });\r\n  };\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n  useEffect(() => {\r\n    axiosInstance\r\n      .get(\"/top10posts\", {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.status == true) {\r\n          //console.log(res.data.data)\r\n          setData(res.data.data);\r\n          setHidden(false);\r\n        } else {\r\n          message.error(\"Truy vấn dữ liệu không thành công\");\r\n        }\r\n      });\r\n  }, [reload]);\r\n  return (\r\n    <div className=\"App\">\r\n      <Title strong>HỆ THỐNG THEO DÕI XU HƯỚNG MẠNG XÃ HỘI</Title>\r\n\r\n      <Row>\r\n        <Col offset={6} span={12}>\r\n          <Form\r\n            form={form}\r\n            name=\"control-hooks\"\r\n            onFinish={onFinish}\r\n            validateMessages={validateMessages}\r\n          >\r\n            <Form.Item\r\n              name=\"Link\"\r\n              label=\"Link\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                style={{ width: \"100%\" }}\r\n                prefix={<LinkOutlined className=\"site-form-item-icon\" />}\r\n              />\r\n            </Form.Item>\r\n            <Row\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Form.Item style={{ padding: \"10px\" }}>\r\n                <Space>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    onClick={onReset}\r\n                    \r\n                  >\r\n                    Reset link\r\n                  </Button>\r\n                  <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                    Đăng bài\r\n                  </Button>\r\n                </Space>\r\n              </Form.Item>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Typography.Title level={2}>10 bài viết gần đây</Typography.Title>\r\n      <Row style={{ paddingTop: \"20px\", width: \"100%\" }} hidden={hidden}>\r\n       \r\n        <Col span={12} offset={6}>\r\n          <Row gutter={[16, 16]}>\r\n            {data.map((index, i) => {\r\n              return (\r\n                <Col span={8}>\r\n                  <Card type=\"inner\" title={index.providerName} bordered={true} key={i}>\r\n                    <Space direction=\"vertical\">\r\n                      <Tooltip>{index.content!=null?index.content:'Không có nội dung'}</Tooltip>\r\n                      <Tooltip placement=\"topLeft\" title={index.url}>\r\n                        <a href={index.url} target=\"_blank\">\r\n                          Link bài viết\r\n                        </a>\r\n                      </Tooltip>\r\n                    </Space>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nconst PrivateRoute = ({ component: Component, auth ,...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            auth ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/login\"\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\nexport default PrivateRoute;","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Login from \"./Layout/Login\";\r\nimport Dashboard from \"./Layout/Dashboard\";\r\nimport { BrowserRouter as Browser, Switch, Route } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport ProtectRoute from \"./Layout/ProtectRoute\";\r\nimport { fetchProfileUser } from \"./Redux/Reducer/loginReducer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nfunction App() {\r\n  const { loadingProfile, auth } = useSelector((state) => state.loginReducer);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    //gửi kiểm tra hệ thống tài khoản đã đăng nhập hay chưa\r\n    dispatch(fetchProfileUser(localStorage.getItem(\"token\")));\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n        {loadingProfile ? (\r\n          <div>Loading....</div>\r\n        ) : (\r\n      <Browser>\r\n          <Switch>\r\n            <ProtectRoute path=\"/\" exact component={Dashboard} auth={auth} />\r\n            <Route path=\"/login\" component={(props) => <Login {...props} />} />\r\n          </Switch>\r\n      </Browser>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport loginReducer from './loginReducer'\r\nexport default combineReducers({\r\n   loginReducer,\r\n})","import {configureStore} from '@reduxjs/toolkit';\r\nimport rootReducer from './Reducer';\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n  })\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./Redux/store\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}